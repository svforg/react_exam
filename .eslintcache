[{"D:\\OSPanel\\domains\\react_projects\\react_exam\\src\\App.tsx":"1","D:\\OSPanel\\domains\\react_projects\\react_exam\\src\\components\\Output\\Output.tsx":"2","D:\\OSPanel\\domains\\react_projects\\react_exam\\src\\index.tsx":"3","D:\\OSPanel\\domains\\react_projects\\react_exam\\src\\components\\CustomInput\\CustomInput.tsx":"4","D:\\OSPanel\\domains\\react_projects\\react_exam\\src\\components\\Settings\\Settings.tsx":"5","D:\\OSPanel\\domains\\react_projects\\react_exam\\src\\components\\Display\\Display.tsx":"6","D:\\OSPanel\\domains\\react_projects\\react_exam\\src\\components\\CustomButton\\CustomButton.tsx":"7","D:\\OSPanel\\domains\\react_projects\\react_exam\\src\\functions\\localStorage\\localStorage.ts":"8"},{"size":2818,"mtime":1608567026589,"results":"9","hashOfConfig":"10"},{"size":380,"mtime":1608555114187,"results":"11","hashOfConfig":"10"},{"size":500,"mtime":1607099684351,"results":"12","hashOfConfig":"10"},{"size":2270,"mtime":1608553180578,"results":"13","hashOfConfig":"10"},{"size":1884,"mtime":1608566952382,"results":"14","hashOfConfig":"10"},{"size":1071,"mtime":1608559831915,"results":"15","hashOfConfig":"10"},{"size":436,"mtime":1607099854865,"results":"16","hashOfConfig":"10"},{"size":627,"mtime":1608561595501,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1w8qk7z",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\OSPanel\\domains\\react_projects\\react_exam\\src\\App.tsx",["38"],"D:\\OSPanel\\domains\\react_projects\\react_exam\\src\\components\\Output\\Output.tsx",[],["39","40"],"D:\\OSPanel\\domains\\react_projects\\react_exam\\src\\index.tsx",[],["41","42"],"D:\\OSPanel\\domains\\react_projects\\react_exam\\src\\components\\CustomInput\\CustomInput.tsx",["43"],"import React, {ButtonHTMLAttributes, DetailedHTMLProps, ChangeEvent, KeyboardEvent, InputHTMLAttributes} from 'react';\nimport css from \"./CustomInput.module.css\";\n\n\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: (value: string) => void\n    error?: string | null\n    spanClassName?: string\n    labelTitle?: string\n};\n\nconst CustomInput: React.FC<SuperInputTextPropsType> = (\n    {\n        labelTitle,\n        type,\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps\n    }\n) => {\n\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value);\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        e.key === \"Enter\" // если нажата кнопка Enter\n        && onEnter // и есть пропс onEnter\n        && onEnter(e.currentTarget.value); // то вызвать его\n    }\n    const finalSpanClassName = `${css.error} ${spanClassName ? spanClassName : \"\"}`;\n    const finalInputClassName = error ? `${css.errorInput} ${css.superInput}` : css.superInput;\n\n    return (\n        <label className={css.label}>\n            <span className={css.labelTitle}>\n                {labelTitle}\n            </span>\n            <input\n                type={type}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <label className={finalSpanClassName}>{error}</label>}\n        </label>\n    );\n};\n\nexport default CustomInput;\n",["44","45"],"D:\\OSPanel\\domains\\react_projects\\react_exam\\src\\components\\Settings\\Settings.tsx",[],"D:\\OSPanel\\domains\\react_projects\\react_exam\\src\\components\\Display\\Display.tsx",[],"D:\\OSPanel\\domains\\react_projects\\react_exam\\src\\components\\CustomButton\\CustomButton.tsx",[],"D:\\OSPanel\\domains\\react_projects\\react_exam\\src\\functions\\localStorage\\localStorage.ts",[],{"ruleId":"46","severity":1,"message":"47","line":1,"column":16,"nodeType":"48","messageId":"49","endLine":1,"endColumn":27},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"50","replacedBy":"54"},{"ruleId":"52","replacedBy":"55"},{"ruleId":"46","severity":1,"message":"56","line":1,"column":16,"nodeType":"48","messageId":"49","endLine":1,"endColumn":36},{"ruleId":"50","replacedBy":"57"},{"ruleId":"52","replacedBy":"58"},"@typescript-eslint/no-unused-vars","'ChangeEvent' is defined but never used.","Identifier","unusedVar","no-native-reassign",["59"],"no-negated-in-lhs",["60"],["59"],["60"],"'ButtonHTMLAttributes' is defined but never used.",["59"],["60"],"no-global-assign","no-unsafe-negation"]