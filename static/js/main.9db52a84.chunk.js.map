{"version":3,"sources":["components/shared/CustomButton/CustomButton.module.scss","App.module.scss","components/shared/CustomInput/CustomInput.module.scss","redux/counterSelectors.ts","redux/counterConstats.ts","redux/counterActions.ts","components/shared/CustomButton/CustomButton.tsx","components/shared/CustomInput/CustomInput.tsx","components/presentational/Settings/Settings.tsx","components/presentational/Display/Display.tsx","containers/Counter.tsx","functions/localStorage.ts","App.tsx","reportWebVitals.ts","redux/counterReducer.ts","redux/store.ts","index.tsx","components/presentational/Display/Display.module.scss","components/presentational/Settings/Settings.module.scss"],"names":["module","exports","COUNTER_TYPES","selectAll","state","counter","setDisplayValueAC","displayValue","type","SET_DISPLAY_VALUE","payload","setErrorAC","error","SET_ERROR","CustomButton","restProps","className","css","button","CustomInput","labelTitle","onChange","onChangeText","onKeyPress","onEnter","spanClassName","finalSpanClassName","finalInputClassName","inputField_invalid","inputField","label","e","currentTarget","value","key","Settings","checkError","saveSettings","maxValueHandler","maxValue","startValueHandler","startValue","AppWrapper","AppSettings","event","valueAsNumber","toString","AppInput","disabled","onClick","Display","setIncrementDefault","setIncrementValueUp","incrementValue","finalClassName","AppOutput","parseInt","Counter","useSelector","dispatch","_useDispatch","ActionCreator","useDispatch","stateLocalStorage","defaultState","stateAsString","localStorage","getItem","JSON","parse","restoresState","LOAD_STORAGE_VALUE","loadStorageValueAC","min","max","stringify","setItem","savesState","SET_MAX_VALUE","setMaxValueAC","SET_START_VALUE","setStartValueAC","cnt","isNaN","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reducers","combineReducers","action","store","createStore","window","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9db52a84.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"CustomButton_button__37m5z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__8DER-\",\"AppWrapper\":\"App_AppWrapper__3xlt0\",\"AppInput\":\"App_AppInput__1mbuu\",\"AppInner\":\"App_AppInner__1wLzl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputField\":\"CustomInput_inputField__3mj4Y\",\"label\":\"CustomInput_label__1P2z5\",\"labelTitle\":\"CustomInput_labelTitle__1X8wO\",\"error\":\"CustomInput_error__3lnFN\"};","import { IGlobalState } from './store';\r\n\r\ninterface IRootState extends IGlobalState {}\r\n\r\nexport const selectStartValue = (state: IRootState) => state.counter.startValue;\r\nexport const selectMaxValue = (state: IRootState) => state.counter.maxValue;\r\nexport const selectDisplayValue = (state: IRootState) => state.counter.displayValue;\r\nexport const selectError = (state: IRootState) => state.counter.error;\r\n\r\nexport const selectAll = (state: IRootState) => state.counter;\r\n","const SET_START_VALUE = \"SET_START_VALUE\";\r\nconst SET_MAX_VALUE = \"SET_MAX_VALUE\";\r\nconst SET_DISPLAY_VALUE = \"SET_DISPLAY_VALUE\";\r\nconst SET_ERROR = \"SET_ERROR\";\r\nconst LOAD_STORAGE_VALUE = \"LOAD_STORAGE_VALUE\";\r\n\r\nexport enum COUNTER_TYPES {\r\n    SET_START_VALUE,\r\n    SET_MAX_VALUE,\r\n    SET_DISPLAY_VALUE,\r\n    SET_ERROR,\r\n    LOAD_STORAGE_VALUE,\r\n}\r\n\r\n","import {useDispatch as _useDispatch} from 'react-redux';\r\nimport {COUNTER_TYPES} from \"./counterConstats\";\r\n\r\nexport type CounterActionsType =\r\n    ReturnType<typeof setStartValueAC>\r\n    | ReturnType<typeof setMaxValueAC>\r\n    | ReturnType<typeof setDisplayValueAC>\r\n    | ReturnType<typeof setErrorAC>\r\n    | ReturnType<typeof loadStorageValueAC>\r\n\r\nexport const setStartValueAC = (startValue: string) => ({\r\n    type: COUNTER_TYPES.SET_START_VALUE,\r\n    payload: { startValue }\r\n} as const);\r\n\r\nexport const setMaxValueAC = (maxValue: string) => ({\r\n    type: COUNTER_TYPES.SET_MAX_VALUE,\r\n    payload: { maxValue }\r\n} as const);\r\n\r\nexport const setDisplayValueAC = (displayValue: string) => ({\r\n    type: COUNTER_TYPES.SET_DISPLAY_VALUE,\r\n    payload: { displayValue }\r\n} as const);\r\n\r\nexport const setErrorAC = (error: boolean) => ({\r\n    type: COUNTER_TYPES.SET_ERROR,\r\n    payload: { error }\r\n} as const);\r\n\r\nexport const loadStorageValueAC = (startValue: string, maxValue: string) => ({\r\n    type: COUNTER_TYPES.LOAD_STORAGE_VALUE,\r\n    payload: { startValue, maxValue }\r\n} as const);\r\n\r\nexport function useDispatch() {\r\n    const dispatch = _useDispatch();\r\n    return (ActionCreator: CounterActionsType) => dispatch(ActionCreator);\r\n}\r\n\r\n\r\n\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react';\nimport css from './CustomButton.module.scss';\n\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\n\nconst CustomButton: React.FC<DefaultButtonPropsType> = (\n    {\n        ...restProps\n    }\n) => {\n\n  return (\n    <button className={css.button}\n      {...restProps}\n    />\n  );\n};\n\nexport default CustomButton;\n","import React, {DetailedHTMLProps, ChangeEvent, KeyboardEvent, InputHTMLAttributes} from 'react';\nimport css from \"./CustomInput.module.scss\";\n\n\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: (value: string) => void\n    error?: string | null\n    spanClassName?: string\n    labelTitle?: string\n};\n\nconst CustomInput: React.FC<SuperInputTextPropsType> = (\n    {\n        labelTitle,\n        type,\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps\n    }\n) => {\n\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value);\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        e.key === \"Enter\" // если нажата кнопка Enter\n        && onEnter // и есть пропс onEnter\n        && onEnter(e.currentTarget.value); // то вызвать его\n    }\n    const finalSpanClassName = `${css.error} ${spanClassName ? spanClassName : \"\"}`;\n    const finalInputClassName = error ? `${css.inputField_invalid} ${css.inputField}` : css.inputField;\n\n    return (\n        <label className={css.label}>\n            <span className={css.labelTitle}>\n                {labelTitle}\n            </span>\n            <input\n                type={type}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n                {...restProps}\n            />\n            {error && <label className={finalSpanClassName}>{error}</label>}\n        </label>\n    );\n};\n\nexport default CustomInput;\n","import React, {ChangeEvent} from 'react';\nimport CustomButton from \"../../shared/CustomButton/CustomButton\";\nimport CustomInput from \"../../shared/CustomInput/CustomInput\";\nimport css from \"./Settings.module.scss\";\n\ntype SettingsPropsType = {\n    saveSettings: () => void\n    checkError: (startValue: string, maxValue: string) => void\n    maxValueHandler: (maxValue: string) => void\n    maxValue: string\n    startValueHandler: (startValue: string) => void\n    startValue: string\n    error: boolean\n}\n\nexport const Settings: React.FC<SettingsPropsType> = (\n    {\n        checkError,\n        saveSettings,\n        maxValueHandler,\n        maxValue,\n        startValueHandler,\n        startValue,\n        error\n    }\n) => {\n\n    const maxValueCallback = (event: ChangeEvent<HTMLInputElement>) => {\n        maxValueHandler(event.currentTarget.valueAsNumber.toString());\n        checkError(startValue, event.currentTarget.valueAsNumber.toString());\n    };\n    const startValueCallback = (event: ChangeEvent<HTMLInputElement>) => {\n        startValueHandler(event.currentTarget.valueAsNumber.toString());\n        checkError(event.currentTarget.valueAsNumber.toString(), maxValue);\n    };\n\n    const saveSettingsValue = () => saveSettings();\n\n    return (\n        <div className={css.AppWrapper}>\n\n        <div className={css.AppSettings}>\n                <CustomInput\n                    onChange={maxValueCallback}\n                    labelTitle=\"Max value\"\n                    type=\"number\"\n                    value={maxValue}/>\n\n                <CustomInput\n                    onChange={startValueCallback}\n                    labelTitle=\"Start value\"\n                    type=\"number\"\n                    value={startValue}/>\n            </div>\n\n            <div className={css.AppInput}>\n                <CustomButton\n                    disabled={error}\n                    onClick={saveSettingsValue}>\n                    set\n                </CustomButton>\n            </div>\n        </div>\n    );\n};","import React from 'react';\nimport CustomButton from \"../../shared/CustomButton/CustomButton\";\nimport css from \"./Display.module.scss\";\n\ntype DisplayPropsType = {\n    setIncrementDefault: () => void\n    setIncrementValueUp: () => void\n    incrementValue: string\n    error: boolean\n}\n\nexport const Display: React.FC<DisplayPropsType> = (\n    {\n        setIncrementDefault,\n        setIncrementValueUp,\n        incrementValue,\n        error,\n    }\n) => {\n    const finalClassName = (error) ? `${css.AppOutput} ${css.error}` : css.AppOutput;\n\n    return (\n        <div className={css.AppWrapper}>\n\n            <div className={finalClassName}>\n                    {incrementValue}\n            </div>\n\n            <div className={css.AppInput}>\n                <CustomButton\n                    onClick={setIncrementValueUp}\n                    disabled={error}>\n                    inc\n                </CustomButton>\n\n                <CustomButton onClick={setIncrementDefault} disabled={parseInt(incrementValue) === 0}>\n                    reset\n                </CustomButton>\n            </div>\n        </div>\n    );\n};\n\n\n","import React from 'react';\nimport {useSelector} from \"react-redux\";\nimport {restoresState, savesState} from \"../functions/localStorage\";\nimport {selectAll} from \"../redux/counterSelectors\";\nimport {\n    loadStorageValueAC,\n    setDisplayValueAC, setErrorAC,\n    setMaxValueAC,\n    setStartValueAC,\n    useDispatch\n} from \"../redux/counterActions\";\nimport {Settings} from \"../components/presentational/Settings/Settings\";\nimport {Display} from \"../components/presentational/Display/Display\";\n\ntype StateLocalStorageType = {\n    startValue: string\n    maxValue: string\n}\n\nexport const Counter: React.FC = () => {\n\n    const {\n        startValue,\n        maxValue,\n        displayValue,\n        error,\n    } = useSelector(selectAll);\n\n    const dispatch = useDispatch();\n\n    const stateLocalStorage = restoresState<StateLocalStorageType>(\"counter-settings\", {startValue: \"0\", maxValue: \"5\"});\n\n    !startValue && !maxValue && dispatch(loadStorageValueAC(stateLocalStorage.startValue, stateLocalStorage.maxValue));\n\n    const startValueHandler = (value: string) => {\n        dispatch(setStartValueAC(value));\n    };\n    const maxValueHandler = (maxValue: string) =>  {\n        dispatch(setMaxValueAC(maxValue));\n    };\n    const saveSettings = () => {\n        savesState<StateLocalStorageType>(\"counter-settings\", {startValue, maxValue});\n        dispatch(setDisplayValueAC(startValue));\n    };\n\n    const setIncrementValueUp = () => {\n        let cnt = parseInt(displayValue);\n\n        if (isNaN(cnt)) {\n\n            dispatch(setDisplayValueAC(startValue));\n        } else {\n            cnt += 1;\n            dispatch(setDisplayValueAC(cnt.toString()));\n\n            const max = parseInt(maxValue);\n            cnt === max && dispatch(setErrorAC(true));\n        }\n    };\n    const setIncrementDefault = () => {\n        dispatch(setErrorAC(false));\n        dispatch(setDisplayValueAC(startValue.toString()));\n    };\n\n    const checkError = (startValue: string, maxValue: string) => {\n        const min = parseInt(startValue);\n        const max = parseInt(maxValue);\n\n        if ( min < 0 || min >= max ) {\n            dispatch(setDisplayValueAC(\"Incorrect value\"));\n            dispatch(setErrorAC(true));\n        }\n        else {\n            dispatch(setErrorAC(false));\n            dispatch(setDisplayValueAC(\"Enter values and press \\'SET\\'\"));\n        }\n    };\n\n    return <>\n        <Settings\n            startValue={startValue}\n            maxValue={maxValue}\n            checkError={checkError}\n            saveSettings={saveSettings}\n            maxValueHandler={maxValueHandler}\n            startValueHandler={startValueHandler}\n            error={error}/>\n\n        <Display\n            incrementValue={displayValue}\n            setIncrementDefault={setIncrementDefault}\n            setIncrementValueUp={setIncrementValueUp}\n            error={error}/>\n    </>\n};","export function savesState<T>(key: string, state: T) {\r\n    const stateAsString = JSON.stringify(state);\r\n    localStorage.setItem(key, stateAsString)\r\n}\r\n\r\nexport function restoresState<T>(key: string, defaultState: T) {\r\n    const stateAsString = localStorage.getItem(key);\r\n    if (stateAsString !== null) defaultState = JSON.parse(stateAsString) as T;\r\n    return defaultState;\r\n}","import React from 'react';\nimport {Counter} from \"./containers/Counter\";\nimport css from './App.module.scss';\n\nexport const App: React.FC = () =>\n    <div className={css.App}>\n        <Counter />\n    </div>;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {COUNTER_TYPES} from \"./counterConstats\";\r\nimport {CounterActionsType} from \"./counterActions\";\r\n\r\nexport type CounterStateType = {\r\n    startValue: string\r\n    maxValue: string\r\n    displayValue: string\r\n    error: boolean\r\n}\r\n\r\nlet initialState = {\r\n    startValue: \"\",\r\n    maxValue: \"\",\r\n    displayValue: \"0\",\r\n    error: false,\r\n};\r\n\r\nexport const counterReducer = (state: CounterStateType = initialState, action: CounterActionsType): CounterStateType => {\r\n\r\n    switch (action.type) {\r\n        case COUNTER_TYPES.SET_START_VALUE:\r\n            return {\r\n                ...state,\r\n                startValue: action.payload.startValue\r\n            };\r\n\r\n        case COUNTER_TYPES.SET_MAX_VALUE:\r\n            return {\r\n                ...state,\r\n                maxValue: action.payload.maxValue\r\n            };\r\n\r\n        case COUNTER_TYPES.SET_DISPLAY_VALUE:\r\n            return {\r\n                ...state,\r\n                displayValue: action.payload.displayValue\r\n            };\r\n\r\n        case COUNTER_TYPES.SET_ERROR:\r\n            return {\r\n                ...state,\r\n                error: action.payload.error\r\n            };\r\n\r\n        case COUNTER_TYPES.LOAD_STORAGE_VALUE:\r\n            return {\r\n                ...state,\r\n                startValue: action.payload.startValue,\r\n                maxValue: action.payload.maxValue\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import {combineReducers, createStore} from 'redux';\r\nimport {counterReducer} from \"./counterReducer\";\r\n\r\nconst reducers = combineReducers({\r\n    counter: counterReducer,\r\n});\r\n\r\nexport type IGlobalState = ReturnType<typeof reducers>;\r\n\r\nexport const store = createStore(reducers);\r\n\r\n// @ts-ignore\r\nwindow.store = store;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {App} from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {store} from \"./redux/store\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AppOutput\":\"Display_AppOutput__3W_9I App_AppInner__1wLzl\",\"AppInput\":\"Display_AppInput__3-MBI App_AppInput__1mbuu\",\"error\":\"Display_error__iVIht\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AppSettings\":\"Settings_AppSettings__1WNLB App_AppInner__1wLzl\",\"AppInput\":\"Settings_AppInput__2ITvr App_AppInput__1mbuu\"};"],"sourceRoot":""}